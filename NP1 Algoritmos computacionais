#include <iostream>
#include <cctype>

int main(int argc, char** argv) {
	//Criar automatico usando 02 for aninhado
	char reserva[10][6] = {
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '},
		{' ', ' ', ' ', ' ', ' ', ' '}
	};

	int fileira = -1, acento = -1;
	char poltrona = ' ';
	char continuar = 's';
	int tipo_passagem = 0; // 1 = Econômico, 2 = Executivo

	while (true) {	
		// Seleção do tipo de passagem
		printf("\nSelecione o tipo de passagem: [1] Econômico, [2] Executivo: ");
		scanf("%d", &tipo_passagem);

		// Input da fileira e da poltrona
		while (true) {
			printf("\nDigite a fileira (1-10): ");
			scanf("%d", &fileira);
			if (fileira < 1 || fileira > 10) {
				printf("Fileira inválida. Escolha um número entre 1 e 10.\n");
				continue;
			}

			printf("\nDigite a poltrona [A][B][C][D][E][F]: ");
			scanf(" %c", &poltrona);
			poltrona = toupper(poltrona);  // Transformar em maiúscula

			switch (poltrona) {
				case 'A':
					acento = 0;
					break;
				case 'B':
					acento = 1;
					break;
				case 'C':
					acento = 2;
					break;
				case 'D':
					acento = 3;
					break;
				case 'E':
					acento = 4;
					break;
				case 'F':
					acento = 5;
					break;
				default:
					printf("\nPoltrona inválida. Tente novamente.");
					continue;
			}

			// Verificar se o assento já está reservado
			if (reserva[fileira-1][acento] == 'x') {
				printf("Esse assento já está reservado. Por favor, escolha outro.\n");
				continue;
			}

			// Restrições baseadas no tipo de passagem
			if (tipo_passagem == 1 && (poltrona == 'A' || poltrona == 'F')) {
				printf("Assentos A e F são exclusivos para passagens Executivas. Escolha outro assento.\n");
				continue;
			} else if (tipo_passagem == 2 && (poltrona != 'A' && poltrona != 'F')) {
				printf("Recomendamos as poltronas A ou F para passagens Executivas, mas outros assentos também são permitidos.\n");
			}

			// Reservar o assento
			reserva[fileira-1][acento] = 'x';
			break;
		}

		// Exibir a disposição dos assentos
		printf("\n\t\t[A] [B] [C]\t[D] [E] [F]\n");
		for (int x = 0; x < 10; x++) {
			if (x < 9)	printf("\n\t0%d\t", x + 1);
			else		printf("\n\t%d\t", x + 1);

			for (int y = 0; y < 6; y++) {
				printf("[%c] ", reserva[x][y]);
				if (y == 2) {
					printf("\t");
				}
			}
		}
		printf("\n");

		// Pergunta se deseja continuar com outra reserva
		printf("Deseja realizar outra reserva? (s/n): ");
		scanf(" %c", &continuar);
		continuar = tolower(continuar);  // Aceitar 's' ou 'S'

		if (continuar == 'n') {
			printf("Encerrando o sistema de reservas...\n");
			break;
		}
	}

	return 0;
}
